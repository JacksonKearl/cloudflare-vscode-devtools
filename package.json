{
  "name": "cloudflare-vscode-devtools",
  "displayName": "Cloudflare KV (unofficial)",
  "repository": {
    "url": "https://github.com/JacksonKearl/cloudflare-vscode-devtools/"
  },
  "icon": "icon.jpeg",
  "publisher": "jaaxxx",
  "description": "Interface with Cloudflare products (for now just KV, more to come?)",
  "version": "0.0.2",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onFileSystem:cloudflare-devtools-kv"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "cloudflare-devtools.copyMetadata",
        "title": "Copy Metadata",
        "icon": "$(copy)",
        "enablement": "viewItem == entry || viewItem == meta"
      },
      {
        "command": "cloudflare-devtools.copyKey",
        "title": "Copy Key",
        "icon": "$(copy)",
        "enablement": "viewItem == entry"
      },
      {
        "command": "cloudflare-devtools.createEntry",
        "title": "Create Entry",
        "icon": "$(new-file)",
        "enablement": "viewItem == query"
      },
      {
        "command": "cloudflare-devtools.deleteEntry",
        "title": "Delete Item",
        "icon": "$(trash)",
        "enablement": "viewItem == entry"
      },
      {
        "command": "cloudflare-devtools.refreshQuery",
        "title": "Refresh",
        "icon": "$(refresh)",
        "enablement": "viewItem == query"
      },
      {
        "command": "cloudflare-devtools.expandAllMetadata",
        "title": "Expand All Metadata",
        "icon": "$(expand-all)",
        "enablement": "viewItem == query"
      },
      {
        "command": "cloudflare-devtools.editKey",
        "title": "Edit Key",
        "icon": "$(edit)",
        "enablement": "viewItem == entry"
      },
      {
        "command": "cloudflare-devtools.refreshEntry",
        "title": "Refresh",
        "icon": "$(refresh)",
        "enablement": "resourceScheme == cloudflare-devtools-kv"
      },
      {
        "command": "cloudflare-devtools.editMetadata",
        "title": "Edit Metadata",
        "icon": "$(code)",
        "enablement": "viewItem == entry"
      },
      {
        "command": "cloudflare-devtools.editExpiration",
        "title": "Edit Expiration Time",
        "icon": "$(calendar)",
        "enablement": "viewItem == entry"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "cloudflare-devtools.refreshEntry",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "when": "viewItem == query",
          "command": "cloudflare-devtools.createEntry",
          "group": "inline@1"
        },
        {
          "when": "viewItem == query",
          "command": "cloudflare-devtools.expandAllMetadata",
          "group": "inline@2"
        },
        {
          "when": "viewItem == query",
          "command": "cloudflare-devtools.refreshQuery",
          "group": "inline@3"
        },
        {
          "when": "viewItem == meta",
          "command": "cloudflare-devtools.copyMetadata",
          "group": "inline"
        },
        {
          "when": "viewItem == meta",
          "command": "cloudflare-devtools.copyMetadata",
          "group": "copy"
        },
        {
          "when": "viewItem == entry",
          "command": "cloudflare-devtools.copyKey",
          "group": "copy"
        },
        {
          "when": "viewItem == entry",
          "command": "cloudflare-devtools.copyMetadata",
          "group": "copy"
        },
        {
          "when": "viewItem == entry",
          "command": "cloudflare-devtools.editKey",
          "group": "edit@1"
        },
        {
          "when": "viewItem == entry",
          "command": "cloudflare-devtools.editMetadata",
          "group": "inline@1"
        },
        {
          "when": "viewItem == entry",
          "command": "cloudflare-devtools.editMetadata",
          "group": "edit@2"
        },
        {
          "when": "viewItem == entry",
          "command": "cloudflare-devtools.editExpiration",
          "group": "inline@2"
        },
        {
          "when": "viewItem == entry",
          "command": "cloudflare-devtools.editExpiration",
          "group": "edit@3"
        },
        {
          "when": "viewItem == entry",
          "command": "cloudflare-devtools.deleteEntry",
          "group": "inline@3"
        },
        {
          "when": "viewItem == entry",
          "command": "cloudflare-devtools.deleteEntry",
          "group": "delete@1"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "cloudflare-devtools.kv",
        "contents": "No queries configured... yet!\n[Add new query](command:workbench.action.openSettings?%5B%22cloudflare-devtools.kv.queries%22%5D)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "title": "Cloudflare",
          "id": "cloudflare",
          "icon": "./cf.svg"
        }
      ]
    },
    "views": {
      "cloudflare": [
        {
          "icon": "./cf.svg",
          "contextualTitle": "Cloudflare",
          "id": "cloudflare-devtools.kv",
          "name": "KV"
        }
      ]
    },
    "configuration": {
      "properties": {
        "cloudflare-devtools.wranglerPath": {
          "scope": "machine",
          "type": "string",
          "markdownDescription": "Command used to invoke wrangler. Configure this to run against a local or development version of the wrangler CLI. For example: `node /some/absolute/path/to/wangler-dist/cli.js` or `npx https://prerelease-registry.devprod.cloudflare.dev/workers-sdk/...`",
          "default": "wrangler"
        },
        "cloudflare-devtools.kv.queries": {
          "type": "array",
          "markdownDescription": "List of KV queries to show in the view.",
          "items": {
            "type": "object",
            "default": {
              "namespace": {
                "id": "",
                "local": false
              },
              "prefix": "",
              "title": "My Query"
            },
            "additionalProperties": false,
            "properties": {
              "namespace": {
                "oneOf": [
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "markdownDescription": "The KV Namespace ID to consult.\n\n***Note:*** depending on how you deploy, the value set in your `wrangler.toml` may not match the true value as configured in the Cloudflare Web UI, be sure to check the Web UI's ID if things are amiss.",
                        "type": "string"
                      },
                      "local": {
                        "markdownDescription": "When enabled, results will be fetched from the local KV database.",
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "binding": {
                        "markdownDescription": "The KV Binding to consult.\n\n***Note:*** depending on how you deploy, the value set in your `wrangler.toml` may not match the true value as configured in the Cloudflare Web UI, be sure to check the Web UI's ID if things are amiss.",
                        "type": "string"
                      },
                      "local": {
                        "markdownDescription": "When enabled, results will be fetched from the local KV database. This implies `preview: true`, though that can be explicitly set false if you know what you're doing.",
                        "type": "boolean"
                      },
                      "preview": {
                        "markdownDescription": "Whether to use the preview ID for this binding as configured in wrangler.toml. This is not needed when operating in local mode.\n\n***Note:*** this requires your wrangler.toml file to accurately match the bindings as configured in the Web UI, depending on how you deploy this will likely not be the case.",
                        "type": "boolean"
                      }
                    }
                  }
                ]
              },
              "prefix": {
                "markdownDescription": "The prefix to query for. This prefix will be stripped from all keys when displayed in the UI.",
                "type": "string"
              },
              "title": {
                "markdownDescription": "The title for this query when displayed in the UI. Will fall back to the prefix if unset.",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@total-typescript/ts-reset": "^0.4.2",
    "@types/glob": "^8.0.1",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^5.49.0",
    "@typescript-eslint/parser": "^5.49.0",
    "@vscode/test-electron": "^2.2.2",
    "eslint": "^8.33.0",
    "glob": "^8.1.0",
    "mocha": "^10.1.0",
    "typescript": "^4.9.4"
  }
}
